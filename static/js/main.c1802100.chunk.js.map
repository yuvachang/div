{"version":3,"sources":["store/actions/totalsActions.tsx","store/actions/actionTypes.tsx","components/Input.tsx","components/functions.tsx","store/actions/usersActions.tsx","components/TopHalf/TopHalf.tsx","components/Modal/Modal.tsx","components/BottomHalf/UserItemInputs.tsx","components/BottomHalf/UserItem.tsx","components/BottomHalf/Debts.tsx","components/BottomHalf/BottomHalf.tsx","App.tsx","serviceWorker.js","store/reducers/utilFuncs.tsx","store/reducers/usersReducer.tsx","store/reducers/totalsReducer.tsx","store/index.tsx","index.tsx"],"names":["updateSubTotal","subtotal","total","type","payload","clearTipTax","updateTax","tax","updateTip","tip","useLocalStorageTotals","lsData","Input","props","className","disabled","name","onChange","value","val","onBlur","updateStore","onKeyDown","e","target","kc","keyCode","inputValue","console","log","includes","preventDefault","blur","defaultProps","unixTimeToDate","unixtime","date","Date","day","getDay","d","getDate","length","padStart","m","getMonth","y","getFullYear","roundUSD","num","Math","round","toFixed","getInitials","str","words","split","filter","char","toUpperCase","concat","nameFormat","newName","trim","slice","join","useLocalStorageUsers","LSUsers","addUser","user","uid","random","toString","substr","oweAmount","paid","isCustomOweAmt","deleteUser","updateUserName","updateUserPaid","updateUserOweAmount","toggleIsCustomOweAmt","calcOweAmounts","setColors","connect","state","ownProps","totals","dispatch","bindActionCreators","updateUserDebts","useState","setTotals","collapsed","setCollapsed","includeTipTax","setIncludeTipTax","formatAndTotalOnBlur","targetValue","targetName","String","newState","newTotal","stateTotals","ntotal","Number","calculateTotal","totalAndSubtotalEqual","formHasData","setFormHasData","handleChange","useEffect","useLS","onClick","style","width","height","newTotals","Modal","yes","no","msg","userItem","users","updateName","updatePaid","updateUserOweAmt","toggleCustOweAmt","setUser","map","word","capitalizeWords","totalPaid","Object","keys","reduce","acc","curr","remainingAmount","formatOnBlur","enterKeyListener","key","which","autoComplete","spellCheck","marginBottom","justifyContent","Infinity","alt","src","bool","title","UserItem","setCollapse","displayModal","setDisplayModal","closeModal","usersOpen","oa","p","t","debtPaid","backgroundColor","color","checkUserOpen","marginTop","Debts","userDebts","setUserDebts","isDebtOneUser","setIsDebtOneUser","debtsHeight","setDebtsHeight","ownerUID","payToUID","setAllDebts","debts","calcDebtsHeight","setDebts","alldebts","forEach","debtor","debtObj","debtee","closePanel","isCollapsed","debtsRef","useRef","initials","userInitials","idx","border","debt","filterUserDebt","init","margin","ref","amount","borderRadius","marginRight","alignSelf","marginLeft","usersArr","setUsersOpen","window","setTimeout","openUsers","document","getElementsByClassName","el","transition","lsDate","setLsDate","setModal","error","setError","setLsData","localStorage","removeItem","LS","getItem","unixTime","JSON","parse","exportDataToFile","a","json","makeJSONfile","blob","Blob","link","createElement","URL","createObjectURL","href","download","body","appendChild","click","removeChild","saveData","getTime","stringify","onbeforeunload","setItem","newUsers","totalsKeys","ptotalsKeys","initialsLength","usersLength","tf","borderBottom","id","file","files","readFile","FileReader","onload","contents","result","readAsText","importData","htmlFor","paddingTop","Boolean","location","hostname","match","createNewState","field","newStateUserOweAmts","totalDebt","evenSplitArr","createInitialsArr","calculateDebts","newDebts","userIds","debtees","debtors","owed","push","addDebtObj","owes","shift","hslIncrement","floor","userId","initialState","usersReducer","totalsReducer","reducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1802100.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes'\nimport { TotalState } from '../reducers/totalsReducer'\n\nexport const updateSubTotal = (subtotal: string, total: string) => {\n  return {\n    type: actionTypes.UPDATE_SUBTOTAL,\n    payload: { subtotal, total },\n  }\n}\n\nexport const clearTipTax = () => {\n  return {\n    type: actionTypes.CLEAR_TIPTAX,\n  }\n}\n\nexport const updateTax = (tax: string, total: string) => {\n  return {\n    type: actionTypes.UPDATE_TAX,\n    payload: { tax, total },\n  }\n}\n\nexport const updateTip = (tip: string, total: string) => {\n  return {\n    type: actionTypes.UPDATE_TIP,\n    payload: { tip, total },\n  }\n}\n\nexport const useLocalStorageTotals = (lsData: TotalState) => {\n  return {\n    type: actionTypes.TOTALS_USE_LOCALSTORAGE,\n    payload: lsData,\n  }\n}\n","export interface ActionType {\n  type: string\n  payload?: any\n}\n\n//USERS\nexport const USERS_USE_LOCALSTORAGE = 'USERS_USE_LOCALSTORAGE'\nexport const USERS_ADD = 'USERS_ADD'\nexport const USERS_NAME = 'USERS_NAME'\nexport const USERS_PAID = 'USERS_PAID'\nexport const USERS_OWE = 'USERS_OWE'\nexport const USERS_TOGGLECUSTOWE = 'USERS_TOGGLECUSTOWE'\nexport const CALC_OWES = 'CALC_OWES'\nexport const USERS_DELETE = 'USERS_DELETE'\nexport const USERS_SETCOLORS = 'USERS_SETCOLORS' \n\n//TOTALS\nexport const TOTALS_USE_LOCALSTORAGE = 'TOTALS_USE_LOCALSTORAGE'\nexport const UPDATE_SUBTOTAL = 'UPDATE_SUBTOTAL'\nexport const UPDATE_TIP = 'UPDATE_TIP'\nexport const UPDATE_TAX = 'UPDATE_TAX'\nexport const CLEAR_TIPTAX = 'CLEAR_TIPTAX'\n","import React from 'react'\n\ninterface Props {\n  val: number\n  name: string\n  onChange?: (e: React.SyntheticEvent<HTMLInputElement>) => void\n  updateStore: (e: React.SyntheticEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst Input: React.FunctionComponent<Props> = props => {\n  const characterChecker = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // exclude: 0-37,40-48,57-97,105-110,110-190\n    // include: 37-40,48 - 57,97 - 105,110,190(arrows, num, numpad, period, decimal)\n    let target = e.target as HTMLInputElement\n    let kc = e.keyCode\n    let inputValue = target.value\n\n    if (kc === 190 || kc === 110) {\n      console.log(inputValue, 'hello')\n      if (inputValue.includes('.')) {\n        //if number already has decimal, do nothing\n        e.preventDefault()\n        return\n      }\n    }\n    if (\n      kc !== 8 &&\n      kc !== 46 &&\n      (kc < 37 ||\n        (kc > 40 && kc < 48) ||\n        (kc > 57 && kc < 97) ||\n        (kc > 105 && kc < 110) ||\n        (kc > 110 && kc < 190) ||\n        kc > 190)\n    ) {\n      e.preventDefault()\n      if (kc === 13) {\n        target.blur()\n      }\n    }\n  }\n\n  return (\n    <input\n      className={props.disabled ? 'top no-hover' : 'top'}\n      type='number'\n      name={props.name}\n      onChange={props.onChange}\n      value={props.val}\n      onBlur={props.updateStore}\n      onKeyDown={characterChecker}\n      disabled={props.disabled}\n    />\n  )\n}\n\nInput.defaultProps = {\n  disabled: false,\n  updateStore: () => {},\n}\n\nexport default Input\n","import { TotalState } from '../store/reducers/totalsReducer'\n\nexport const unixTimeToDate = (unixtime: number): string => {\n  let date: Date = new Date(unixtime)\n  const months: string[] = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ]\n  let days: string[] = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat']\n  const day: string = days[date.getDay()]\n  let d: string = `${date.getDate()}`\n  if (d.length === 1) {\n    d = d.padStart(2, '0')\n  }\n  const m: string = months[date.getMonth()]\n  const y: string = `${date.getFullYear()}`\n  let saveDate = `${day} ${m} ${d} ${y}`\n\n  return saveDate\n}\n\nexport const roundUSD = (num: number): number => {\n  return +(Math.round(+num * 100) / 100).toFixed(2)\n}\n\nexport const roundPercent = (num: number): number => {\n  return +(Math.round(+num * 10) / 10).toFixed(1)\n}\n\nexport const filterInput = (input: string): string => {\n  const filteredInput = input\n    .split('')\n    .filter(char => !'abcdefghijklmnopqrstuvwxyz'.includes(char.toLowerCase()))\n    .filter(char => '$%0123456789.'.includes(char))\n    .join('')\n\n  return filteredInput\n}\n\nexport const calculateTotal = (stateTotals: TotalState): string => {\n  let { tip, tax, subtotal } = stateTotals\n  let ntip = (Number(tip) / 100) * Number(subtotal)\n  let ntax = (Number(tax) / 100) * Number(subtotal)\n  let ntotal = ntip + ntax + Number(subtotal)\n  if (ntotal > 0) {\n    return ntotal.toFixed(2)\n  } else return '0'\n}\n\nexport const capitalizeWords = (str: string) => {\n  let words = str.split(' ').filter(char => !!char.length)\n  if (!!words.length) {\n    return words.map(word => word[0].toUpperCase() + word.slice(1)).join(' ')\n  } else return ''\n}\n\nexport const getInitials = (str: string) => {\n  let words = str.split(' ').filter(char => !!char.length)\n  if (!!words.length) {\n    if (words.length === 1) {\n      return words[0][0].toUpperCase()\n    } else {\n      return words[0][0].toUpperCase().concat(words[words.length - 1][0].toUpperCase())\n    }\n  } else return ''\n}\n\nexport const nameFormat = (name: string): string => {\n  let newName: any = name.trim().split(' ')\n  if (newName[0].length > 10) {\n    newName[0] = newName[0].slice(0, 10) + '(...)'\n  }\n  newName = newName[0] + ' ' + getInitials(newName.join(' ')).slice(1)\n  return newName\n}\n","import * as actionTypes from './actionTypes'\nimport { UserState, UserObject } from '../reducers/usersReducer'\n\nexport const useLocalStorageUsers = (LSUsers: UserState) => {\n  return {\n    type: actionTypes.USERS_USE_LOCALSTORAGE,\n    payload: LSUsers,\n  }\n}\n\nexport const addUser = (total: number) => {\n  return {\n    type: actionTypes.USERS_ADD,\n    payload: {\n      user: {\n        uid: Math.random()\n          .toString(36)\n          .substr(2, 9),\n        name: '',\n        oweAmount: 0,\n        paid: 0,\n        isCustomOweAmt: false,\n      } as UserObject,\n      total,\n    },\n  }\n}\n\nexport const deleteUser = (uid: string, total: number) => {\n  return {\n    type: actionTypes.USERS_DELETE,\n    payload: { uid, total },\n  }\n}\n\nexport const updateUserName = (name: string, uid: string) => {\n  return {\n    type: actionTypes.USERS_NAME,\n    payload: { name, uid },\n  }\n}\n\nexport const updateUserPaid = (paid: string, uid: string, total: number) => {\n  return {\n    type: actionTypes.USERS_PAID,\n    payload: { paid, uid, total },\n  }\n}\n\nexport const updateUserOweAmount = (oweAmount: string, uid: string, total: number) => {\n  return {\n    type: actionTypes.USERS_OWE,\n    payload: { oweAmount, uid, total },\n  }\n}\n\nexport const toggleIsCustomOweAmt = (isCustomOweAmt: boolean, uid: string) => {\n  return {\n    type: actionTypes.USERS_TOGGLECUSTOWE,\n    payload: { isCustomOweAmt, uid },\n  }\n}\n\nexport const calcOweAmounts = (total: number) => {\n  return {\n    type: actionTypes.CALC_OWES,\n    payload: { total },\n  }\n}\n\nexport const setColors = () => {\n  return { type: actionTypes.USERS_SETCOLORS, payload: null }\n}\n","import React, { useState, useEffect } from 'react'\nimport { bindActionCreators, Dispatch } from 'redux'\nimport { ReduxState } from '../../store'\nimport { connect } from 'react-redux'\n//import actionCreators\nimport {\n  updateSubTotal,\n  updateTip,\n  updateTax,\n  clearTipTax,\n} from '../../store/actions/totalsActions'\n//import components\nimport Input from '../Input'\nimport { roundPercent, roundUSD, calculateTotal } from '../functions'\nimport { TotalState } from '../../store/reducers/totalsReducer'\nimport { calcOweAmounts } from '../../store/actions/usersActions'\n\ntype Props = LinkDispatchProps & ReduxState & OwnProps\n\ninterface OwnProps {\n  setFormHasData: (tf: boolean) => void\n  formHasData: boolean\n}\n\nconst TopHalf: React.FunctionComponent<Props> = props => {\n  const [totals, setTotals] = useState<TotalState>(props.totals)\n  const [collapsed, setCollapsed] = useState<boolean>(true)\n  const [includeTipTax, setIncludeTipTax] = useState<boolean>(false)\n\n  const clearTipTax = (): void => {\n    let tip, tax\n    tip = tax = 0\n    let newTotals = { ...totals, tip, tax, total: totals.subtotal }\n    setTotals({ ...totals, ...newTotals })\n\n    setIncludeTipTax(false)\n\n    props.clearTipTax()\n  }\n\n  const formatAndTotalOnBlur = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    let target = e.target as HTMLInputElement\n    let targetValue: string = target.value\n    let targetName: string = target.name\n\n    // Format & round targetValue\n    if (targetName === 'subtotal' || targetName === 'total') {\n      if (+targetValue > 0) {\n        targetValue = roundUSD(+targetValue).toFixed(2)\n      } else {\n        targetValue = '0'\n      }\n    } else {\n      targetValue = String(roundPercent(+targetValue))\n    }\n\n    // Check if targetValue changed from before\n    if (+targetValue === (props.totals as any)[targetName]) {\n      // If no change,\n      // Set formatted string to state only\n      setTotals({\n        ...totals,\n        [targetName]: targetValue,\n      })\n    } else {\n      // If changed,\n      // Calc new total\n      let newState: any = { ...totals }\n      newState[targetName] = targetValue\n      const newTotal: string = calculateTotal(newState)\n      newState.total = newTotal\n\n      // Calculate new user debts with newTotal\n      props.updateUserDebts(+newTotal)\n\n      // Check for tip/tax\n      const totalAndSubtotalEqual = newTotal === newState.subtotal\n      if (!totalAndSubtotalEqual && !includeTipTax) {\n        setIncludeTipTax(true)\n      } else if (totalAndSubtotalEqual && !!includeTipTax) {\n        setIncludeTipTax(false)\n      }\n\n      // Set state\n      setTotals({ ...newState })\n\n      // Update Redux store\n      switch (targetName) {\n        case 'subtotal':\n          props.updateSubTotal(targetValue, newTotal)\n          break\n        case 'tip':\n          props.updateTip(targetValue, newTotal)\n          break\n        case 'tax':\n          props.updateTax(targetValue, newTotal)\n          break\n      }\n\n      // Set formHasData\n      if (!props.formHasData) {\n        props.setFormHasData(true)\n      }\n    }\n  }\n\n  const handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    let target = e.target as HTMLInputElement\n    let value: string = target.value\n\n    setTotals({\n      ...totals,\n      [target.name]: value,\n    })\n  }\n\n  //onMount\n  useEffect(() => {\n    if (props.totals.useLS) {\n      console.log('using LS data')\n      if (props.totals.total !== props.totals.subtotal) {\n        setIncludeTipTax(true)\n      }\n      setTotals(props.totals)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.totals.useLS])\n\n  return (\n    <div className='top-half'>\n      <div>\n        <div className='segment'>\n          <p>{collapsed ? 'T' : 'Sub-t'}otal</p>\n          <div className='symbol greytext'>$</div>\n          {collapsed && includeTipTax ? (\n            <Input\n              name='total'\n              onChange={handleChange}\n              val={totals ? totals.total : 0}\n              updateStore={formatAndTotalOnBlur}\n              disabled={true}\n            />\n          ) : (\n            <Input\n              name='subtotal'\n              onChange={e => handleChange(e)}\n              val={totals ? totals.subtotal : 0}\n              updateStore={formatAndTotalOnBlur}\n            />\n          )}\n        </div>\n      </div>\n\n      <div className='grey-button-container'>\n        <div className='grey-button' onClick={() => setCollapsed(!collapsed)}>\n          {!collapsed ? 'hide tips & tax' : includeTipTax ? 'edit amounts' : 'include tips & tax'}\n        </div>\n      </div>\n\n      <div\n        className={`total-details${\n          collapsed ? ' collapsed' : includeTipTax ? ' include-clear-button' : ''\n        }`}>\n        <div className='segment'>\n          <p className='greytext'>\n            Tip (\n            {props.totals.subtotal > 0 && props.totals.tip > 0\n              ? `$${((props.totals.tip / 100) * props.totals.subtotal).toFixed(2)}`\n              : '$0'}\n            )\n          </p>\n          <div className='symbol right greytext'>%</div>\n\n          <Input\n            name='tip'\n            onChange={handleChange}\n            val={totals ? totals.tip : 0}\n            updateStore={formatAndTotalOnBlur}\n          />\n        </div>\n        <div className='segment'>\n          <p className='greytext'>\n            Tax (\n            {props.totals.subtotal > 0 && props.totals.tax > 0\n              ? `$${((props.totals.tax / 100) * props.totals.subtotal).toFixed(2)}`\n              : '$0'}\n            )\n          </p>\n          <div className='symbol right greytext'>%</div>\n          <Input\n            name='tax'\n            onChange={handleChange}\n            val={totals ? totals.tax : 0}\n            updateStore={formatAndTotalOnBlur}\n          />\n        </div>\n\n        {includeTipTax && (\n          <div className='grey-button-container'>\n            <div\n              className='grey-button tiny'\n              style={{ width: '50%', height: '14px' }}\n              onClick={clearTipTax}>\n              clear tip & tax\n            </div>\n          </div>\n        )}\n\n        <div className='segment'>\n          <p className='greytext'>Total</p>\n          <div className='symbol greytext'>$</div>\n          <Input\n            name='total'\n            onChange={handleChange}\n            val={totals ? totals.total : 0}\n            updateStore={formatAndTotalOnBlur}\n            disabled={true}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface LinkDispatchProps {\n  updateSubTotal: (subtotal: string, newTotal: string) => void\n  updateTip: (tip: string, newTotal: string) => void\n  updateTax: (tax: string, newTotal: string) => void\n  clearTipTax: () => void\n\n  updateUserDebts: (total: number) => void\n}\n\nconst mapState = (state: ReduxState, ownProps?: any) => ({\n  totals: state.totals,\n})\n\nconst mapDispatch = (dispatch: Dispatch, ownProps?: any): LinkDispatchProps => ({\n  updateSubTotal: bindActionCreators(updateSubTotal, dispatch),\n  updateTip: bindActionCreators(updateTip, dispatch),\n  updateTax: bindActionCreators(updateTax, dispatch),\n  clearTipTax: bindActionCreators(clearTipTax, dispatch),\n\n  updateUserDebts: bindActionCreators(calcOweAmounts, dispatch),\n})\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(TopHalf)\n","import React from 'react'\n\ninterface Props {\n  yes: () => void\n  no: () => void\n  msg: string\n  userItem?: boolean\n}\n\nconst Modal = ({yes, no, msg, userItem}: Props) => {\n\n  return (\n    <div className={userItem ? 'modal-user':'modal'}>\n      <div className='modal-center'>\n        {msg}\n        <div className='modal-buttons'>\n          <button onClick={yes}>Yes</button>\n          <button onClick={no}>No</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux'\n//nonpackage imports\nimport { ReduxState } from '../../store'\nimport { UserObject, UsersPool } from '../../store/reducers/usersReducer'\nimport {\n  updateUserName,\n  updateUserPaid,\n  updateUserOweAmount,\n  toggleIsCustomOweAmt,\n  calcOweAmounts,\n} from '../../store/actions/usersActions'\nimport { roundUSD, capitalizeWords } from '../functions'\n\ninterface OwnProps {\n  user: UserObject\n}\n\ntype Props = LinkDispatchProps & LinkStateProps & OwnProps\n\nconst UserItemInputs: React.FunctionComponent<Props> = props => {\n  const [user, setUser] = useState<UserObject>({ ...props.user })\n\n  const updateStore = (targetName: string, value: string): string => {\n    switch (targetName) {\n      case 'name': {\n        value = capitalizeWords(value)\n        props.updateName(value, user.uid)\n        break\n      }\n      case 'paid': {\n        let totalPaid: number = Object.keys(props.users)\n          .filter(uid => uid !== user.uid)\n          .reduce((acc: any, curr) => {\n            return acc + props.users[curr].paid\n          }, 0)\n\n        let remainingAmount: number = props.total - totalPaid\n        if (+value > remainingAmount) {\n          value = remainingAmount.toFixed(2)\n        }\n        if (props.user.paid !== +value) {\n          props.updatePaid(String(roundUSD(+value)), user.uid, props.total)\n        }\n        value = roundUSD(+value).toFixed(2)\n        break\n      }\n      case 'oweAmount': {\n        props.updateUserOweAmt(String(roundUSD(+value)), user.uid, props.total)\n        value = roundUSD(+value).toFixed(2)\n        break\n      }\n    }\n\n    if (+value === 0) {\n      if (targetName === 'name') {\n        return ''\n      } else {\n        return '0'\n      }\n    } else return value\n  }\n\n  const handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    let target = e.target as HTMLInputElement\n    let value: string = target.value\n\n    setUser({\n      ...user,\n      [target.name]: value,\n    })\n  }\n\n  const formatOnBlur = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    let target = e.target as HTMLInputElement\n    let value: string = target.value\n\n    value = updateStore(target.name, value)\n\n    setUser({\n      ...user,\n      [target.name]: value,\n    })\n  }\n\n  const enterKeyListener = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const target = e.target as HTMLInputElement\n    const key = e.which || e.keyCode\n    if (target.name === 'name') {\n      if ((key >= 97 && key <= 105) || (key >= 48 && key <= 57)) {\n        e.preventDefault()\n        return\n      }\n    }\n\n    if (e.keyCode === 190 || e.keyCode === 110) {\n      if (target.value.includes('.')) {\n        // If number already has decimal, do nothing\n        e.preventDefault()\n        return\n      }\n    }\n    if (e.keyCode === 13) {\n      target.blur()\n    }\n  }\n\n  const oweButtonHandler = () => {\n    const bool = !user.isCustomOweAmt\n    props.toggleCustOweAmt(bool, props.user.uid)\n    props.calcOweAmounts(props.total)\n\n    setUser({\n      ...user,\n      isCustomOweAmt: bool,\n      oweAmount: props.user.oweAmount,\n    })\n  }\n\n  const payRestOfBill = () => {\n    let value: string = updateStore('paid', String(Infinity))\n\n    setUser({\n      ...user,\n      paid: +value,\n    })\n  }\n\n  const clearPaid = () =>{\n    let value: string = updateStore('paid', '0')\n\n    setUser({\n      ...user,\n      paid: +value,\n    })\n  }\n\n  return (\n    <div className='user-item-inputs'>\n      <div className='segment'>\n        <div className='title greytext'>Name:</div>\n        <input\n          className='bottom'\n          autoComplete='whatever'\n          type='text'\n          name='name'\n          value={user.name || ''}\n          onChange={handleChange}\n          onBlur={formatOnBlur}\n          onKeyDown={enterKeyListener}\n          spellCheck={false}\n        />\n      </div>\n      <div className='segment'>\n        <div className='title greytext'>Paid:</div>\n        <div className='symbol greytext'>$</div>\n        <input\n          className='bottom'\n          type='number'\n          name='paid'\n          value={user.paid || 0}\n          onChange={handleChange}\n          onBlur={formatOnBlur}\n          onKeyDown={enterKeyListener}\n        />\n      </div>\n\n      <div\n        className='grey-button-container'\n        style={{\n          marginBottom: '5px',\n          justifyContent: 'flex-end',\n        }}>\n        <div className='grey-button tiny' onClick={payRestOfBill}>\n          pay remaining total\n        </div>\n        <div\n          style={{\n            width: '20%',\n          }}\n          className='grey-button tiny'\n          onClick={clearPaid}>\n          {' '}\n          clear paid\n        </div>\n      </div>\n\n      <div className='segment'>\n        <div className='title greytext'>Balance:</div>\n        <div className='symbol greytext'>$</div>\n        <input\n          className={`bottom ${user.isCustomOweAmt ? '' : 'no-hover'}`}\n          type='number'\n          name='oweAmount'\n          value={user.isCustomOweAmt ? user.oweAmount : props.user.oweAmount || 0}\n          onChange={handleChange}\n          onBlur={formatOnBlur}\n          onKeyDown={enterKeyListener}\n          disabled={!user.isCustomOweAmt}\n        />\n        <div className='button'>\n          <img\n            alt='edit/clear'\n            src={!!user.isCustomOweAmt ? '/icons/remove.svg' : '/icons/lock.svg'}\n            className='arrowicon'\n            onClick={oweButtonHandler}\n            title={!!user.isCustomOweAmt ? 'clear' : 'unlock to edit'}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface LinkStateProps {\n  total: number\n  users: UsersPool\n}\n\ninterface LinkDispatchProps {\n  updateName: (name: string, uid: string) => void\n  updatePaid: (paid: string, uid: string, total: number) => void\n  updateUserOweAmt: (oweAmount: string, uid: string, total: number) => void\n  toggleCustOweAmt: (isCustomOweAmt: boolean, uid: string) => void\n  calcOweAmounts: (total: number) => void\n}\n\nconst mapState = (state: ReduxState, ownProps?: any) => ({\n  total: state.totals.total,\n  users: state.users.users,\n})\n\nconst mapDispatch = (dispatch: Dispatch, ownProps?: any): LinkDispatchProps => ({\n  updateName: bindActionCreators(updateUserName, dispatch),\n  updatePaid: bindActionCreators(updateUserPaid, dispatch),\n  updateUserOweAmt: bindActionCreators(updateUserOweAmount, dispatch),\n  toggleCustOweAmt: bindActionCreators(toggleIsCustomOweAmt, dispatch),\n  calcOweAmounts: bindActionCreators(calcOweAmounts, dispatch),\n})\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(UserItemInputs)\n","import React, { useState, useEffect } from 'react'\nimport { UserObject } from '../../store/reducers/usersReducer'\nimport UserItemInputs from './UserItemInputs'\nimport Modal from '../Modal/Modal'\n\ninterface Props {\n  user: UserObject\n  total: number\n  deleteUser: () => void\n  checkUserOpen: () => void\n  usersOpen: boolean\n}\n\nconst UserItem: React.FunctionComponent<Props> = props => {\n  const [collapsed, setCollapse] = useState<boolean>(true)\n  const [displayModal, setDisplayModal] = useState<boolean>(false)\n\n  const closeModal = (): void => {\n    setDisplayModal(false)\n  }\n\n  const debtPaid = (): boolean => {\n    const oa = props.user.oweAmount\n    const p = props.user.paid\n    const t = props.total\n    const c = props.user.isCustomOweAmt\n\n    return (!!c || t > 0) && p >= oa && (p > 0 || oa > 0)\n  }\n\n  const toggleCollapse = () => {\n    if (collapsed) {\n      props.checkUserOpen()\n      setCollapse(false)\n    } else {\n      props.checkUserOpen()\n      setCollapse(true)\n    }\n  }\n\n  useEffect(() => {\n    if (!props.user.name) {\n      setCollapse(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!props.usersOpen) {\n      setCollapse(true)\n    }\n  }, [props.usersOpen])\n\n  return (\n    <div\n      className={`user-item ${debtPaid() ? 'debt-settled' : ''}`}\n      // style={{border: `1px solid ${props.user.color}`}}\n    >\n      <div className='color-bar' style={{ backgroundColor: props.user.color }} />\n      <div className={`no-edit${collapsed ? ' collapsed' : ''}`}>\n        <div className='name greytext'>{props.user.name || 'Name'}</div>\n        <div className='amounts'>Paid: ${props.user.paid}</div>\n        <div className='amounts'>Bal: ${props.user.oweAmount}</div>\n        <div className='arrow' onClick={toggleCollapse}>\n          <img\n            src='/icons/down-arrow.png'\n            alt='open/close'\n            className={`arrowicon${collapsed ? '' : ' flip'}`}\n          />\n        </div>\n      </div>\n\n      <div className={`edits${collapsed ? ' collapsed' : ''}`}>\n        <UserItemInputs user={{ ...props.user }} />\n\n        <div className='grey-button-container' style={{ marginTop: '5px' }}>\n          <div\n            className='grey-button tiny red'\n            onClick={() => {\n              if (\n                !props.user.name &&\n                !props.user.paid &&\n                (!props.user.isCustomOweAmt || !props.user.oweAmount)\n              ) {\n                props.deleteUser()\n              } else {\n                setDisplayModal(true)\n              }\n            }}>\n            Delete Person\n          </div>\n        </div>\n      </div>\n\n      {displayModal && (\n        <Modal\n          yes={() => {\n            props.deleteUser()\n            closeModal()\n          }}\n          no={() => closeModal()}\n          msg={`Delete ${props.user.name ? props.user.name : 'person'}?`}\n          userItem={true}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default UserItem\n","import React, { useState, useEffect, useRef } from 'react'\nimport { UsersPool, InitialsObject, DebtPool, DebtObject } from '../../store/reducers/usersReducer'\nimport { nameFormat } from '../functions'\n\ninterface Props {\n  users: UsersPool\n  debts: DebtPool\n  total: number\n  initials: Array<InitialsObject>\n}\n\ninterface LocalDebtObj extends DebtObject {\n  color: string\n  debtee: string\n  debtor: string\n}\n\nconst Debts: React.FunctionComponent<Props> = props => {\n  const [collapsed, setCollapsed] = useState<boolean>(true)\n  const [userDebts, setUserDebts] = useState<LocalDebtObj[]>([])\n  const [isDebtOneUser, setIsDebtOneUser] = useState<boolean>(false)\n  const [debtsHeight, setDebtsHeight] = useState<number>(25)\n\n  // onMount\n  useEffect(() => {\n    if (!userDebts.length || !isDebtOneUser) {\n      setAllDebts(true)\n    } else if (isDebtOneUser) {\n      if (\n        userDebts.length &&\n        (!props.users[userDebts[0].ownerUID] || !props.users[userDebts[0].payToUID])\n      ) {\n        setAllDebts(true)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.debts, props.users])\n\n  const calcDebtsHeight = (length: number) => {\n    let height = length * 20 + 20\n    if (!length) {\n      height = 35\n    }\n    if (height !== debtsHeight) {\n      setDebtsHeight(height)\n    }\n  }\n\n  const setAllDebts = (setDebts: boolean): void | LocalDebtObj[] => {\n    let alldebts: LocalDebtObj[] = []\n\n    Object.keys(props.debts).forEach(uid => {\n      let debtor = nameFormat(props.users[uid].name)\n      let color = props.users[uid].color\n      let debts = props.debts[uid].map(debtObj => {\n        let debtee = nameFormat(props.users[debtObj.payToUID].name)\n        return {\n          ...debtObj,\n          debtor,\n          debtee,\n          color,\n        }\n      })\n\n      alldebts = alldebts.concat(debts)\n    })\n\n    if (!!setDebts) {\n      if (isDebtOneUser) {\n        setIsDebtOneUser(false)\n      }\n      setUserDebts(alldebts)\n      calcDebtsHeight(alldebts.length)\n    } else return alldebts\n  }\n\n  const filterUserDebt = (uid: string) => {\n    if (collapsed) {\n      setCollapsed(false)\n    }\n\n    if (!isDebtOneUser) {\n      setIsDebtOneUser(true)\n      let debts = userDebts.filter(debt => debt.ownerUID === uid)\n      setUserDebts(debts)\n      calcDebtsHeight(debts.length)\n    } else {\n      let debts = (setAllDebts(false) as LocalDebtObj[]).filter(debt => debt.ownerUID === uid)\n      setUserDebts(debts)\n      calcDebtsHeight(debts.length)\n    }\n  }\n\n  const closePanel = (isCollapsed: boolean) => {\n    if (!isCollapsed && collapsed) {\n      setCollapsed(false)\n    } else if (isCollapsed && !collapsed) {\n      setCollapsed(true)\n    }\n  }\n\n  const debtsRef = useRef<HTMLDivElement>(null)\n\n  return !!props.initials.length ? (\n    <div className='debts-and-bubbles'>\n      <div className='user-bubbles'>\n        {props.initials.map((userInitials, idx) => {\n          return (\n            <div\n              className='bubble'\n              style={{\n                border: `1px solid ${props.users[userInitials.uid].color}`,\n                backgroundColor: '#f4f4f4',\n              }}\n              key={idx + 'init'}\n              onClick={() => filterUserDebt(userInitials.uid)}>\n              {userInitials.init ? userInitials.init : 'na'}\n            </div>\n          )\n        })}\n\n        <div\n          className='grey-button-container'\n          style={{ width: `${props.initials.length > 6 ? '100%' : '108px'}`, margin: '2px' }}>\n          <div\n            className='grey-button tiny'\n            style={{ width: '100%', marginTop: `${props.initials.length > 6 ? '7px' : '0'}` }}\n            onClick={() => {\n              setAllDebts(true)\n              closePanel(false)\n            }}>\n            show all debts\n          </div>\n        </div>\n      </div>\n\n      <div\n        className={`debts ${collapsed ? 'collapsed' : ''}`}\n        style={collapsed ? {} : { height: `${debtsHeight}px` }}\n        ref={debtsRef}>\n        {!!userDebts.length ? (\n          userDebts.map(debt => {\n            return (\n              <div className='debt' key={debt.ownerUID + debt.payToUID + debt.amount}>\n                <div //colored bullet\n                  style={{\n                    backgroundColor: debt.color,\n                    borderRadius: '50%',\n                    width: '10px',\n                    height: '10px',\n                    marginRight: '8px',\n                  }}\n                />\n                {debt.debtor} : pay {debt.debtee} ${debt.amount.toFixed(2)}\n              </div>\n            )\n          })\n        ) : isDebtOneUser ? (\n          <div className='small-text'>No individual debts.</div>\n        ) : (\n          <div\n            className='small-text'\n            style={{ width: '80%', alignSelf: 'flex-start', marginLeft: '12px' }}>\n            Add paid amounts more than owed amounts to start building debts between users...\n          </div>\n        )}\n\n        <div className='closebutton'>\n          <img\n            className='iconbutton'\n            src='/icons/remove.svg'\n            alt='close section'\n            onClick={() => closePanel(true)}\n          />\n        </div>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default Debts\n","import React, { useState } from 'react'\nimport { bindActionCreators, Dispatch } from 'redux'\nimport { ReduxState } from '../../store'\nimport { connect } from 'react-redux'\n//import actionCreators\nimport { addUser, deleteUser, setColors } from '../../store/actions/usersActions'\n//import components\nimport {} from '../functions'\nimport UserItem from './UserItem'\nimport { UsersPool, InitialsObject, DebtPool } from '../../store/reducers/usersReducer'\nimport Debts from './Debts'\n\ntype Props = LinkDispatchProps & LinkMapProps\n\nconst BottomHalf: React.FunctionComponent<Props> = props => {\n  const usersArr = Object.keys(props.users).map(uid => props.users[uid])\n  const [usersOpen, setUsersOpen] = useState<boolean>(true)\n  const [openUsersArr, setOpenUsersArr] = useState<string[]>([])\n\n  const openUsersCount = (add: boolean) => {\n    if (add) {\n      setOpenUsersArr([...openUsersArr, 'u'])\n    } else {\n      setOpenUsersArr([...openUsersArr.slice(1)])\n    }\n  }\n\n  const checkUserOpen = () => {\n    window.setTimeout(() => {\n      let openUsers: any = document.getElementsByClassName('no-edit')\n      openUsers = [...openUsers].filter(el => el.className === 'no-edit')\n      // console.log(openUsers)\n      if (!openUsers.length) {\n        setUsersOpen(false)\n      } else {\n        setUsersOpen(true)\n      }\n    }, 150)\n  }\n\n  return (\n    <div className='bottom-half'>\n      <Debts\n        users={props.users}\n        debts={props.debts}\n        initials={props.initials}\n        total={props.total}\n      />\n\n      {!!usersArr.length && (\n        <div\n          className='grey-button-container'\n          style={{ width: '100%', margin: `${usersOpen ? '5px 2px' : '0'}`, transition: '0.2s' }}>\n          <div\n            className='grey-button tiny'\n            style={{ width: '100%', height: `${usersOpen ? '14px' : '0'}`, transition: '0.2s' }}\n            onClick={() => {\n              setUsersOpen(false)\n            }}>\n            Collapse all users\n          </div>\n        </div>\n      )}\n\n      {!!usersArr.length &&\n        usersArr.map((user, idx) => {\n          return (\n            <UserItem\n              usersOpen={usersOpen}\n              checkUserOpen={checkUserOpen}\n              key={user.uid}\n              deleteUser={() => props.deleteUser(user.uid, props.total)}\n              user={{ ...user }}\n              total={props.total}\n            />\n          )\n        })}\n      <div className='user-item button' onClick={() => props.addUser(props.total)}>\n        add person\n      </div>\n    </div>\n  )\n}\n\ninterface LinkMapProps {\n  users: UsersPool\n  total: number\n  initials: Array<InitialsObject>\n  debts: DebtPool\n}\n\ninterface LinkDispatchProps {\n  addUser: (total: number) => void\n  deleteUser: (uid: string, total: number) => void\n  setColors: () => void\n}\n\nconst mapState = (state: ReduxState, ownProps?: any) => ({\n  users: state.users.users,\n  debts: state.users.debts,\n  total: state.totals.total,\n  initials: state.users.initials,\n})\n\nconst mapDispatch = (dispatch: Dispatch, ownProps?: any): LinkDispatchProps => ({\n  addUser: bindActionCreators(addUser, dispatch),\n  deleteUser: bindActionCreators(deleteUser, dispatch),\n  setColors: bindActionCreators(setColors, dispatch),\n})\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(BottomHalf)\n","import React, { useState, useEffect } from 'react'\nimport { Dispatch, bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { ReduxState } from './store'\n//import components\nimport TopHalf from './components/TopHalf/TopHalf'\nimport Modal from './components/Modal/Modal'\nimport { unixTimeToDate } from './components/functions'\n//import actionCreators\nimport { useLocalStorageTotals } from './store/actions/totalsActions'\nimport BottomHalf from './components/BottomHalf/BottomHalf'\nimport { UserState } from './store/reducers/usersReducer'\nimport { TotalState } from './store/reducers/totalsReducer'\nimport { useLocalStorageUsers } from './store/actions/usersActions'\n\ntype Props = LinkDispatchProps & LinkStateProps\n\nconst App: React.FunctionComponent<Props> = props => {\n  const [lsDate, setLsDate] = useState<string>('date not found')\n  const [formHasData, setFormHasData] = useState<boolean>(false)\n  const [displayModal, setModal] = useState<boolean>(false)\n  const [error, setError] = useState<string>('')\n  const [lsData, setLsData] = useState<string>('no data')\n\n  const setJSONdata = (): void => {\n    if (lsData !== 'no data') {\n      const LS = JSON.parse(lsData)\n      const newTotals: TotalState = LS.totals\n      const newUsers: UserState = LS.users\n\n      // Check integrity of LSDATA\n      const totalsKeys = Object.keys(newTotals).length\n      const ptotalsKeys = Object.keys(props.totals).length\n      const initialsLength = newUsers.initials.length\n      const usersLength = Object.keys(newUsers.users).length\n      if (totalsKeys !== ptotalsKeys || initialsLength !== usersLength) {\n        setError('Data corrupt')\n        return\n      } else {\n        props.useLocalStorageTotals(newTotals)\n        props.useLocalStorageUsers(newUsers)\n        setFormHasData(true)\n        closeModal()\n      }\n    }\n  }\n\n  const closeModal = () => {\n    localStorage.removeItem('divviweb')\n    setLsDate('date not found')\n    setModal(false)\n  }\n\n  // onMount\n  useEffect(() => {\n    let LS: string | null = localStorage.getItem('divviweb')\n    if (typeof LS === 'string') {\n      setLsData(LS)\n\n      let unixTime: number = JSON.parse(LS).date\n      setLsDate(unixTimeToDate(unixTime))\n\n      setModal(true)\n    }\n  }, [])\n\n  const exportDataToFile = async () => {\n    const json = makeJSONfile()\n    const blob = new Blob([json], { type: 'application/json' })\n    const link = document.createElement('a')\n    link.href = await URL.createObjectURL(blob)\n    link.download = 'backup.json'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  const makeJSONfile = () => {\n    let saveData = {\n      totals: { ...props.totals },\n      users: { ...props.users },\n      date: new Date().getTime(),\n    }\n    let json = JSON.stringify(saveData)\n    return json\n  }\n\n  const importData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = (e.target as HTMLInputElement).files![0]\n\n    const readFile = new FileReader()\n    readFile.onload = (e: ProgressEvent<FileReader>) => {\n      var contents: any = (e.target as FileReader).result\n      let unixTime: number = JSON.parse(contents).date\n      setLsDate(unixTimeToDate(unixTime))\n      setLsData(contents)\n      setModal(true)\n    }\n    readFile.readAsText(file)\n  }\n\n  //onUnmount\n  window.onbeforeunload = () => {\n    if (!!formHasData || !!Object.keys(props.users.users).length) {\n      localStorage.setItem('divviweb', makeJSONfile())\n    }\n  }\n\n  return (\n    <div className='app'>\n      {displayModal && (\n        <Modal yes={setJSONdata} no={closeModal} msg={`Use session from ${lsDate}?`} />\n      )}\n      {error && <h1>{error}</h1>}\n      <div className='app-card'>\n        <div className='app-title'>Divvi</div>\n        <TopHalf formHasData={formHasData} setFormHasData={(tf: boolean) => setFormHasData(tf)} />\n\n        <BottomHalf />\n        {formHasData && <div style={{ width: '100%', borderBottom: '1px solid #666666' }} />}\n        {formHasData && (\n          <div className='small-text hover' onClick={exportDataToFile}>\n            Export data to file\n          </div>\n        )}\n\n        <input\n          type='file'\n          id='uploadfile'\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => importData(e)}\n        />\n        <label htmlFor='uploadfile' className='small-text hover' style={{ paddingTop: '0px' }}>\n          Upload saved data\n        </label>\n      </div>\n    </div>\n  )\n}\n\ninterface LinkDispatchProps {\n  useLocalStorageTotals: (lsdata: TotalState) => void\n  useLocalStorageUsers: (lsData: UserState) => void\n}\n\ninterface LinkStateProps {\n  totals: TotalState\n  users: UserState\n}\n\nconst mapState = (state: ReduxState, ownProps?: any) => ({\n  totals: state.totals,\n  users: state.users,\n})\n\nconst mapDispatch = (dispatch: Dispatch, ownProps?: any): LinkDispatchProps => ({\n  useLocalStorageTotals: bindActionCreators(useLocalStorageTotals, dispatch),\n  useLocalStorageUsers: bindActionCreators(useLocalStorageUsers, dispatch),\n})\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { UserState, InitialsObject, UserObject, DebtObject, DebtPool } from './usersReducer'\nimport { getInitials } from '../../components/functions'\n\nexport const createNewState = (state: UserState, field: string, payload: any): UserState => {\n  const user = { ...state.users[payload.uid] }\n\n  switch (field) {\n    case 'name':\n      user.name = payload.name\n      break\n    case 'oweAmount':\n      user.oweAmount = +payload.oweAmount\n      break\n    case 'paid': {\n      user.paid = +payload.paid\n      break\n    }\n    case 'isCustomOweAmt':\n      user.isCustomOweAmt = payload.isCustomOweAmt\n      break\n  }\n\n  const newUsers = { ...state.users }\n  newUsers[payload.uid] = user\n  return { ...state, users: newUsers }\n}\n\nexport const newStateUserOweAmts = (state: UserState, total: number): UserState => {\n  let newState = { ...state }\n  let usersArr = Object.keys(state.users).map(key => state.users[key])\n\n  let customDebts = usersArr.reduce((debts, curr) => {\n    if (curr.isCustomOweAmt) {\n      return debts + Number(curr.oweAmount)\n    } else return debts + 0\n  }, 0)\n\n  let totalDebt = total - customDebts\n\n  let evenSplitArr = usersArr.filter(user => !user.isCustomOweAmt)\n\n  usersArr.forEach(user => {\n    if (!user.isCustomOweAmt) {\n      if (totalDebt > 0) {\n        newState.users[user.uid].oweAmount = +(totalDebt / evenSplitArr.length).toFixed(2)\n      } else {\n        newState.users[user.uid].oweAmount = 0\n      }\n    }\n  })\n\n  return newState\n}\n\nexport const createInitialsArr = (state: UserState): InitialsObject[] => {\n  let usersArr = Object.keys(state.users).map(uid => state.users[uid])\n\n  return usersArr.map(user => ({\n    uid: user.uid,\n    init: getInitials(user.name),\n  }))\n}\n\nexport const calculateDebts = (state: UserState, total: number): UserState => {\n  interface Debtee {\n    owed: number\n    uid: string\n  }\n  const newState = { ...state }\n  const newDebts: DebtPool = {}\n  const userIds = Object.keys(newState.users)\n  const debtees: Debtee[] = []\n  const debtors: UserObject[] = []\n\n  userIds.forEach(uid => {\n    let user: UserObject = { ...newState.users[uid] }\n    if (user.paid > user.oweAmount) {\n      const owed = user.paid - user.oweAmount\n      debtees.push({ owed, uid: user.uid })\n    } else if (user.oweAmount > 0 && user.paid < user.oweAmount) {\n      debtors.push(user)\n    }\n  })\n\n  if (!debtees.length) return { ...newState, debts: {} }\n\n  // const totalPaid = userIds.map(uid => newState.users[uid].paid).reduce((a, b) => a + b)\n\n  const addDebtObj = (debtObj: DebtObject, uid: string) => {\n    if (newDebts[uid]) {\n      newDebts[uid].push(debtObj)\n    } else {\n      newDebts[uid] = [debtObj]\n    }\n  }\n\n  debtors.forEach(user => {\n    let owes = user.oweAmount\n    while (owes > 0) {\n      if (!debtees.length) return\n      let owed = debtees[0].owed\n\n      if (owes <= owed) {\n        debtees[0].owed = owed - owes\n        let debtObj = {\n          ownerUID: user.uid,\n          payToUID: debtees[0].uid,\n          amount: +owes.toFixed(2),\n        }\n        addDebtObj(debtObj, user.uid)\n        if (debtees[0].owed <= 0) {\n          debtees.shift()\n        }\n        owes = 0\n      } else if (owes > owed) {\n        let debtObj = {\n          ownerUID: user.uid,\n          payToUID: debtees[0].uid,\n          amount: +owed.toFixed(2),\n        }\n        addDebtObj(debtObj, user.uid)\n        owes = owes - owed\n        debtees.shift()\n      }\n    }\n  })\n\n  newState.debts = newDebts\n\n  return newState\n}\n\nexport const setColors = (state: UserState, uid?: string): UserState => {\n  const userIds = Object.keys(state.users)\n  const newState = { ...state }\n\n  let hslIncrement = 360 / userIds.length\n\n  if (uid) {\n    newState.users[uid].color =\n      'hsla(' + Math.floor(hslIncrement % Math.floor(Math.random() * 360)) + ', 90%, 60%,1)'\n  } else {\n    userIds.forEach(userId => {\n      newState.users[userId].color = 'hsla(' + Math.floor(hslIncrement % 360) + ', 90%, 60%,1)'\n      hslIncrement += 360 / userIds.length\n    })\n  }\n\n  return newState\n}\n","import * as actions from '../actions/actionTypes'\nimport {\n  newStateUserOweAmts,\n  createNewState,\n  createInitialsArr,\n  calculateDebts,\n  setColors,\n} from './utilFuncs'\n\nexport interface DebtObject {\n  ownerUID: string\n  payToUID: string\n  amount: number\n}\n\nexport interface DebtPool {\n  [uid: string]: DebtObject[]\n}\n\nexport interface UserObject {\n  uid: string\n  name: string\n  oweAmount: number\n  paid: number\n  isCustomOweAmt: boolean\n  color: string\n}\n\nexport interface UsersPool {\n  [uid: string]: UserObject\n}\n\nexport interface InitialsObject {\n  uid: string\n  init: string\n}\n\nexport interface UserState {\n  initials: Array<InitialsObject>\n  users: UsersPool\n  debts: DebtPool\n}\n\nconst initialState: UserState = {\n  initials: [],\n  users: {},\n  debts: {},\n}\n\nconst usersReducer = (state: UserState = initialState, { type, payload }: actions.ActionType) => {\n  switch (type) {\n    case actions.USERS_USE_LOCALSTORAGE: {\n      return {\n        ...state,\n        ...payload,\n      }\n    }\n\n    case actions.USERS_ADD: {\n      let users: UsersPool = { ...state.users }\n      users[payload.user.uid] = payload.user\n      let newState: UserState = {\n        ...state,\n        users,\n      }\n      newState = newStateUserOweAmts(newState, payload.total)\n      const initials: Array<InitialsObject> = createInitialsArr(newState)\n      newState = calculateDebts(newState, payload.total)\n      newState = setColors(newState)\n\n      return {\n        ...newState,\n        initials,\n      }\n    }\n\n    case actions.USERS_DELETE: {\n      let users: UsersPool = { ...state.users }\n      delete users[payload.uid]\n      let newState: UserState = {\n        ...state,\n        users,\n      }\n      newState = newStateUserOweAmts(newState, payload.total)\n      const initials: Array<InitialsObject> = createInitialsArr(newState)\n      newState = calculateDebts(newState, payload.total)\n      newState = setColors(newState)\n      return {\n        ...newState,\n        initials,\n      }\n    }\n\n    case actions.USERS_NAME: {\n      const newState: UserState = createNewState(state, 'name', payload)\n      const initials: Array<InitialsObject> = createInitialsArr(newState)\n\n      return {\n        ...newState,\n        initials,\n      }\n    }\n\n    case actions.USERS_PAID: {\n      let newState: UserState = createNewState(state, 'paid', payload)\n      newState = calculateDebts(newState, payload.total)\n      return {\n        ...newState,\n      }\n    }\n\n    \n\n    case actions.USERS_OWE: {\n      let newState: UserState = createNewState(state, 'oweAmount', payload)\n      newState = newStateUserOweAmts(newState, payload.total)\n      newState = calculateDebts(newState, payload.total)\n      return {\n        ...newState,\n      }\n    }\n\n    case actions.USERS_TOGGLECUSTOWE: {\n      let newState: UserState = createNewState(state, 'isCustomOweAmt', payload)\n      newState = newStateUserOweAmts(newState, payload.total)\n      newState = calculateDebts(newState, payload.total)\n      return {\n        ...newState,\n      }\n    }\n\n    case actions.CALC_OWES: {\n      let newState = newStateUserOweAmts(state, payload.total)\n      newState = calculateDebts(newState, payload.total)\n      return {\n        ...newState,\n      }\n    }\n\n    case actions.USERS_SETCOLORS: {\n      let newState = setColors(state)\n      return { ...newState }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default usersReducer\n","import * as actions from '../actions/actionTypes'\n\nexport interface TotalState {\n  subtotal: number\n  tip: number\n  tax: number\n  total: number\n  useLS: boolean\n}\n\nconst initialState: TotalState = {\n  subtotal: 0,\n  tip: 0,\n  tax: 0,\n  total: 0,\n  useLS: false,\n}\n\nconst totalsReducer = (\n  state: TotalState = initialState, \n  { type, payload }: actions.ActionType\n  ) => {\n  switch (type) {\n    case actions.UPDATE_SUBTOTAL:\n      return {\n        ...state,\n        subtotal: +payload.subtotal,\n        total: +payload.total,\n      }\n    case actions.UPDATE_TIP:\n      return {\n        ...state,\n        tip: +payload.tip,\n        total: +payload.total,\n      }\n    case actions.UPDATE_TAX:\n      return {\n        ...state,\n        tax: +payload.tax,\n        total: +payload.total,\n      }\n    case actions.CLEAR_TIPTAX:\n      return {\n        ...state,\n        tip: 0,\n        tax: 0,\n        total: +state.subtotal,\n      }\n    case actions.TOTALS_USE_LOCALSTORAGE:\n      return {\n        ...state,\n        ...payload,\n        useLS: true,\n      }\n    default:\n      return state\n  }\n}\n\nexport default totalsReducer\n","import { createStore, combineReducers, Reducer } from 'redux'\nimport { TotalState } from './reducers/totalsReducer'\nimport usersReducer, { UserState } from './reducers/usersReducer'\nimport totalsReducer from './reducers/totalsReducer'\n\nexport interface ReduxState {\n  users: UserState\n  totals: TotalState\n}\n\nconst reducer: Reducer<ReduxState> = combineReducers({\n  users: usersReducer,\n  totals: totalsReducer,\n})\n\nconst store = createStore(\n  reducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}